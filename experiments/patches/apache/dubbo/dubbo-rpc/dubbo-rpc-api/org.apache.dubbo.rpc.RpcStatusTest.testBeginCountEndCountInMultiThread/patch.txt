```java
package org.apache.dubbo.rpc;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import java.util.concurrent.atomic.AtomicInteger;

class RpcStatusTest {

    @Test
    void testBeginCountEndCountInMultiThread() throws Exception {
        URL url = new ServiceConfigURL("dubbo", "127.0.0.1", 91032, DemoService.class.getName());
        String methodName = "testBeginCountEndCountInMultiThread";

        // Reset the RPC status before each test run
        RpcStatus.removeStatus(url, methodName);
        RpcStatus.removeStatus(url);

        int max = 50;
        int threadNum = 10;
        AtomicInteger successCount = new AtomicInteger();
        CountDownLatch startLatch = new CountDownLatch(1);
        CountDownLatch endLatch = new CountDownLatch(threadNum);
        List<Thread> threadList = new ArrayList<>(threadNum);
        for (int i = 0; i < threadNum; i++) {
            Thread thread = new Thread(() -> {
                try {
                    startLatch.await();
                    for (int j = 0; j < 100; j++) {
                        boolean flag = RpcStatus.beginCount(url, methodName, max);
                        if (flag) {
                            successCount.incrementAndGet();
                        }
                    }
                    endLatch.countDown();
                } catch (Exception e) {
                    // ignore
                }
            });
            threadList.add(thread);
        }
        threadList.forEach(Thread::start);
        startLatch.countDown();
        endLatch.await();
        Assertions.assertEquals(max, successCount.get());
    }
}
```
